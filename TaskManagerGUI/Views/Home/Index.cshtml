@{
    ViewData["Title"] = "Home Page";
    var processList = ViewData["ProcessList"] as List<ProcessModel>;
@using Newtonsoft.Json;
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

<div class="container">
    <div class="row">
        <div class="col">
            <canvas id="myChart" style="max-width:600px;"></canvas>
        </div>
    </div>
</div>
<script>
    const xValues = [];
    const yValues = [];

    const randomColors = [
        "#FF0034",
        "#980015",
        "#E1274D",
        "#E71843",
        "#D18F98",
        "#FA4B9A"
    ];
    @{
        var highestCpuProcesses = processList.OrderByDescending(p => p.CPU).Take(6).ToList();
    }
    @foreach (var process in highestCpuProcesses)
    {
        <text>
            xValues.push("@process.ProcessName");
            yValues.push(@process.CPU);
            console.log(0);
        </text>
    }

    const barColors = [];
    const borderColors = [];
    for (let i = 0; i < xValues.length; i += 1)
    {
        const randomColor = randomColors[i]
        barColors.push(randomColor);
        borderColors.push(randomColor);
    }


    new Chart("myChart", {
        type: "doughnut",
        data: {
            labels: xValues,
            datasets: [{
                backgroundColor: barColors,
                borderColor: borderColors,
                data: yValues
            }]
        },
        options: {
            title: {
                display: true,
                text: "Currently Running Processes"
            }
        }
    })
</script>